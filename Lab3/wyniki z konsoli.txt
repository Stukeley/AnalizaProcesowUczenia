> # Autor: Rafal Klinowski, wariant: 1.
> 
> setwd('C:\\Users\\klino\\Pulpit\\Studia magisterskie\\APU\\Lab3')
> 
> # Instalacja pakietu neuralnet
> install.packages('neuralnet')
Error in install.packages : Updating loaded packages
> library('neuralnet')
> 
> # Zadanie 1.
> # Funkcja: f(x) = x^3 + 2x, x < [1; 100]
> 
> # Wczytanie wczesniej utworzonego pliku z danymi
> dane <- read.csv('dane1.csv')
> 
> # Bez normalizacji
> # scaled <- dane
> 
> # Normalizacja min-max
> normalize <- function(x) {
+   return ((x-min(x)) / (max(x) - min(x)))
+ }
> 
> scaled <- as.data.frame(lapply(dane, normalize))
> 
> # Normalizacja
> # scaled <- scale(dane)
> 
> # Podzial danych na set treningowy i walidacyjny
> trainset <- scaled[1:80, ]
> testset <- scaled[81:100, ]
> 
> # Utworzenie sieci neuronowej
> # wyjscie ~ wejscie1 + wejscie2 + ...
> # Testowane wartoÅ›ci hidden: od 5 do 15, oraz c(2,1), c(2,2), c(5,5)
> # Najlepsze wyniki dla hidden=10
> nn <- neuralnet(Output ~ Input, data=trainset, hidden=10, threshold=0.01, linear.output=TRUE)
> 
> print(nn)
$call
neuralnet(formula = Output ~ Input, data = trainset, hidden = 10, 
    threshold = 0.01, linear.output = TRUE)

$response
         Output
1  0.000000e+00
2  8.998227e-06
3  2.999409e-05
4  6.898641e-05
5  1.319740e-04
6  2.249557e-04
7  3.539303e-04
8  5.248966e-04
9  7.438535e-04
10 1.016800e-03
11 1.349734e-03
12 1.748656e-03
13 2.219563e-03
14 2.768455e-03
15 3.401330e-03
16 4.124188e-03
17 4.943026e-03
18 5.863845e-03
19 6.892642e-03
20 8.035417e-03
21 9.298168e-03
22 1.068689e-02
23 1.220760e-02
24 1.386627e-02
25 1.566891e-02
26 1.762153e-02
27 1.973011e-02
28 2.200067e-02
29 2.443919e-02
30 2.705167e-02
31 2.984412e-02
32 3.282253e-02
33 3.599291e-02
34 3.936125e-02
35 4.293354e-02
36 4.671580e-02
37 5.071401e-02
38 5.493418e-02
39 5.938230e-02
40 6.406438e-02
41 6.898641e-02
42 7.415439e-02
43 7.957432e-02
44 8.525221e-02
45 9.119403e-02
46 9.740581e-02
47 1.038935e-01
48 1.106632e-01
49 1.177208e-01
50 1.250724e-01
51 1.327239e-01
52 1.406813e-01
53 1.489507e-01
54 1.575380e-01
55 1.664492e-01
56 1.756904e-01
57 1.852675e-01
58 1.951865e-01
59 2.054535e-01
60 2.160744e-01
61 2.270553e-01
62 2.384020e-01
63 2.501207e-01
64 2.622173e-01
65 2.746979e-01
66 2.875683e-01
67 3.008347e-01
68 3.145030e-01
69 3.285793e-01
70 3.430694e-01
71 3.579795e-01
72 3.733155e-01
73 3.890834e-01
74 4.052892e-01
75 4.219389e-01
76 4.390385e-01
77 4.565941e-01
78 4.746115e-01
79 4.930969e-01
80 5.120561e-01

$covariate
                
 [1,] 0.00000000
 [2,] 0.01010101
 [3,] 0.02020202
 [4,] 0.03030303
 [5,] 0.04040404
 [6,] 0.05050505
 [7,] 0.06060606
 [8,] 0.07070707
 [9,] 0.08080808
[10,] 0.09090909
[11,] 0.10101010
[12,] 0.11111111
[13,] 0.12121212
[14,] 0.13131313
[15,] 0.14141414
[16,] 0.15151515
[17,] 0.16161616
[18,] 0.17171717
[19,] 0.18181818
[20,] 0.19191919
[21,] 0.20202020
[22,] 0.21212121
[23,] 0.22222222
[24,] 0.23232323
[25,] 0.24242424
[26,] 0.25252525
[27,] 0.26262626
[28,] 0.27272727
[29,] 0.28282828
[30,] 0.29292929
[31,] 0.30303030
[32,] 0.31313131
[33,] 0.32323232
[34,] 0.33333333
[35,] 0.34343434
[36,] 0.35353535
[37,] 0.36363636
[38,] 0.37373737
[39,] 0.38383838
[40,] 0.39393939
[41,] 0.40404040
[42,] 0.41414141
[43,] 0.42424242
[44,] 0.43434343
[45,] 0.44444444
[46,] 0.45454545
[47,] 0.46464646
[48,] 0.47474747
[49,] 0.48484848
[50,] 0.49494949
[51,] 0.50505051
[52,] 0.51515152
[53,] 0.52525253
[54,] 0.53535354
[55,] 0.54545455
[56,] 0.55555556
[57,] 0.56565657
[58,] 0.57575758
[59,] 0.58585859
[60,] 0.59595960
[61,] 0.60606061
[62,] 0.61616162
[63,] 0.62626263
[64,] 0.63636364
[65,] 0.64646465
[66,] 0.65656566
[67,] 0.66666667
[68,] 0.67676768
[69,] 0.68686869
[70,] 0.69696970
[71,] 0.70707071
[72,] 0.71717172
[73,] 0.72727273
[74,] 0.73737374
[75,] 0.74747475
[76,] 0.75757576
[77,] 0.76767677
[78,] 0.77777778
[79,] 0.78787879
[80,] 0.79797980

$model.list
$model.list$response
[1] "Output"

$model.list$variables
[1] "Input"


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x000001a457c6bfc8>
<environment: 0x000001a45382a4c0>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x000001a457c69490>
<environment: 0x000001a4538353b8>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
        Input       Output
1  0.00000000 0.000000e+00
2  0.01010101 8.998227e-06
3  0.02020202 2.999409e-05
4  0.03030303 6.898641e-05
5  0.04040404 1.319740e-04
6  0.05050505 2.249557e-04
7  0.06060606 3.539303e-04
8  0.07070707 5.248966e-04
9  0.08080808 7.438535e-04
10 0.09090909 1.016800e-03
11 0.10101010 1.349734e-03
12 0.11111111 1.748656e-03
13 0.12121212 2.219563e-03
14 0.13131313 2.768455e-03
15 0.14141414 3.401330e-03
16 0.15151515 4.124188e-03
17 0.16161616 4.943026e-03
18 0.17171717 5.863845e-03
19 0.18181818 6.892642e-03
20 0.19191919 8.035417e-03
21 0.20202020 9.298168e-03
22 0.21212121 1.068689e-02
23 0.22222222 1.220760e-02
24 0.23232323 1.386627e-02
25 0.24242424 1.566891e-02
26 0.25252525 1.762153e-02
27 0.26262626 1.973011e-02
28 0.27272727 2.200067e-02
29 0.28282828 2.443919e-02
30 0.29292929 2.705167e-02
31 0.30303030 2.984412e-02
32 0.31313131 3.282253e-02
33 0.32323232 3.599291e-02
34 0.33333333 3.936125e-02
35 0.34343434 4.293354e-02
36 0.35353535 4.671580e-02
37 0.36363636 5.071401e-02
38 0.37373737 5.493418e-02
39 0.38383838 5.938230e-02
40 0.39393939 6.406438e-02
41 0.40404040 6.898641e-02
42 0.41414141 7.415439e-02
43 0.42424242 7.957432e-02
44 0.43434343 8.525221e-02
45 0.44444444 9.119403e-02
46 0.45454545 9.740581e-02
47 0.46464646 1.038935e-01
48 0.47474747 1.106632e-01
49 0.48484848 1.177208e-01
50 0.49494949 1.250724e-01
51 0.50505051 1.327239e-01
52 0.51515152 1.406813e-01
53 0.52525253 1.489507e-01
54 0.53535354 1.575380e-01
55 0.54545455 1.664492e-01
56 0.55555556 1.756904e-01
57 0.56565657 1.852675e-01
58 0.57575758 1.951865e-01
59 0.58585859 2.054535e-01
60 0.59595960 2.160744e-01
61 0.60606061 2.270553e-01
62 0.61616162 2.384020e-01
63 0.62626263 2.501207e-01
64 0.63636364 2.622173e-01
65 0.64646465 2.746979e-01
66 0.65656566 2.875683e-01
67 0.66666667 3.008347e-01
68 0.67676768 3.145030e-01
69 0.68686869 3.285793e-01
70 0.69696970 3.430694e-01
71 0.70707071 3.579795e-01
72 0.71717172 3.733155e-01
73 0.72727273 3.890834e-01
74 0.73737374 4.052892e-01
75 0.74747475 4.219389e-01
76 0.75757576 4.390385e-01
77 0.76767677 4.565941e-01
78 0.77777778 4.746115e-01
79 0.78787879 4.930969e-01
80 0.79797980 5.120561e-01

$exclude
NULL

$net.result
$net.result[[1]]
              [,1]
 [1,] -0.102636753
 [2,] -0.096677954
 [3,] -0.090716222
 [4,] -0.084751765
 [5,] -0.078784791
 [6,] -0.072815513
 [7,] -0.066844144
 [8,] -0.060870902
 [9,] -0.054896003
[10,] -0.048919668
[11,] -0.042942118
[12,] -0.036963576
[13,] -0.030984268
[14,] -0.025004420
[15,] -0.019024261
[16,] -0.013044021
[17,] -0.007063932
[18,] -0.001084227
[19,]  0.004894861
[20,]  0.010873094
[21,]  0.016850236
[22,]  0.022826048
[23,]  0.028800291
[24,]  0.034772725
[25,]  0.040743106
[26,]  0.046711194
[27,]  0.052676744
[28,]  0.058639511
[29,]  0.064599252
[30,]  0.070555719
[31,]  0.076508666
[32,]  0.082457847
[33,]  0.088403014
[34,]  0.094343918
[35,]  0.100280313
[36,]  0.106211949
[37,]  0.112138578
[38,]  0.118059951
[39,]  0.123975819
[40,]  0.129885935
[41,]  0.135790050
[42,]  0.141687914
[43,]  0.147579282
[44,]  0.153463904
[45,]  0.159341535
[46,]  0.165211928
[47,]  0.171074836
[48,]  0.176930015
[49,]  0.182777222
[50,]  0.188616211
[51,]  0.194446741
[52,]  0.200268571
[53,]  0.206081459
[54,]  0.211885168
[55,]  0.217679460
[56,]  0.223464097
[57,]  0.229238845
[58,]  0.235003470
[59,]  0.240757741
[60,]  0.246501427
[61,]  0.252234299
[62,]  0.257956131
[63,]  0.263666697
[64,]  0.269365776
[65,]  0.275053145
[66,]  0.280728586
[67,]  0.286391882
[68,]  0.292042819
[69,]  0.297681183
[70,]  0.303306766
[71,]  0.308919359
[72,]  0.314518758
[73,]  0.320104759
[74,]  0.325677162
[75,]  0.331235771
[76,]  0.336780389
[77,]  0.342310825
[78,]  0.347826889
[79,]  0.353328396
[80,]  0.358815160


$weights
$weights[[1]]
$weights[[1]][[1]]
           [,1]       [,2]       [,3]       [,4]      [,5]       [,6]      [,7]        [,8]
[1,] -1.2570740  0.7294029 -0.0781616 -1.1215985 0.1599749 -0.7757492 0.3644640 -0.05648989
[2,] -0.3499332 -1.5359026  1.0370504 -0.3331643 0.4844737 -0.3653401 0.5893739 -0.81321583
           [,9]     [,10]
[1,]  0.2999965 1.2334990
[2,] -1.0785767 0.2819117

$weights[[1]][[2]]
            [,1]
 [1,]  0.1145501
 [2,] -0.1734388
 [3,] -0.2738706
 [4,]  0.4228732
 [5,] -0.9233384
 [6,]  0.6386656
 [7,] -0.9326232
 [8,]  0.1500985
 [9,] -0.4318410
[10,] -0.1818662
[11,]  0.2641872



$generalized.weights
$generalized.weights[[1]]
             [,1]
 [1,]   -5.211306
 [2,]   -5.565404
 [3,]   -5.966405
 [4,]   -6.424232
 [5,]   -6.951821
 [6,]   -7.566354
 [7,]   -8.291163
 [8,]   -9.158744
 [9,]  -10.215750
[10,]  -11.531645
[11,]  -13.214584
[12,]  -15.442711
[13,]  -18.531698
[14,]  -23.099196
[15,]  -30.539458
[16,]  -44.803436
[17,]  -83.220092
[18,] -545.386863
[19,]  121.515768
[20,]   55.025771
[21,]   35.715579
[22,]   26.520116
[23,]   21.142182
[24,]   17.613535
[25,]   15.120555
[26,]   13.265864
[27,]   11.832329
[28,]   10.691275
[29,]    9.761601
[30,]    8.989655
[31,]    8.338528
[32,]    7.781993
[33,]    7.300903
[34,]    6.880955
[35,]    6.511244
[36,]    6.183316
[37,]    5.890513
[38,]    5.627521
[39,]    5.390046
[40,]    5.174583
[41,]    4.978241
[42,]    4.798613
[43,]    4.633683
[44,]    4.481744
[45,]    4.341346
[46,]    4.211248
[47,]    4.090379
[48,]    3.977813
[49,]    3.872744
[50,]    3.774469
[51,]    3.682368
[52,]    3.595896
[53,]    3.514570
[54,]    3.437963
[55,]    3.365692
[56,]    3.297415
[57,]    3.232826
[58,]    3.171650
[59,]    3.113638
[60,]    3.058566
[61,]    3.006230
[62,]    2.956446
[63,]    2.909045
[64,]    2.863873
[65,]    2.820791
[66,]    2.779670
[67,]    2.740391
[68,]    2.702847
[69,]    2.666937
[70,]    2.632570
[71,]    2.599661
[72,]    2.568131
[73,]    2.537907
[74,]    2.508922
[75,]    2.481114
[76,]    2.454423
[77,]    2.428796
[78,]    2.404183
[79,]    2.380535
[80,]    2.357810


$startweights
$startweights[[1]]
$startweights[[1]][[1]]
          [,1]       [,2]      [,3]      [,4]      [,5]       [,6]      [,7]       [,8]
[1,] -1.271267  0.5632565 0.1315249 -1.270051 0.3134385 -0.9300037 0.5283517  0.1741179
[2,] -0.692972 -0.3047137 1.0678671 -1.126191 0.1133709  1.0828235 0.8180799 -0.8456021
            [,9]      [,10]
[1,]  0.14574191  1.3873210
[2,] -0.01611323 -0.7229679

$startweights[[1]][[2]]
             [,1]
 [1,]  0.26731732
 [2,]  0.05785065
 [3,] -0.11859090
 [4,]  0.57669726
 [5,]  0.15787813
 [6,]  0.79248752
 [7,] -0.82869271
 [8,]  0.30392259
 [9,]  0.20590911
[10,] -0.02909884
[11,]  0.41695440



$result.matrix
                                [,1]
error                    0.145074937
reached.threshold        0.008403986
steps                  156.000000000
Intercept.to.1layhid1   -1.257074043
Input.to.1layhid1       -0.349933230
Intercept.to.1layhid2    0.729402884
Input.to.1layhid2       -1.535902621
Intercept.to.1layhid3   -0.078161603
Input.to.1layhid3        1.037050361
Intercept.to.1layhid4   -1.121598451
Input.to.1layhid4       -0.333164339
Intercept.to.1layhid5    0.159974876
Input.to.1layhid5        0.484473742
Intercept.to.1layhid6   -0.775749199
Input.to.1layhid6       -0.365340126
Intercept.to.1layhid7    0.364463971
Input.to.1layhid7        0.589373930
Intercept.to.1layhid8   -0.056489886
Input.to.1layhid8       -0.813215829
Intercept.to.1layhid9    0.299996472
Input.to.1layhid9       -1.078576652
Intercept.to.1layhid10   1.233499004
Input.to.1layhid10       0.281911655
Intercept.to.Output      0.114550088
1layhid1.to.Output      -0.173438750
1layhid2.to.Output      -0.273870592
1layhid3.to.Output       0.422873211
1layhid4.to.Output      -0.923338415
1layhid5.to.Output       0.638665623
1layhid6.to.Output      -0.932623190
1layhid7.to.Output       0.150098493
1layhid8.to.Output      -0.431841049
1layhid9.to.Output      -0.181866231
1layhid10.to.Output      0.264187197

attr(,"class")
[1] "nn"
> #plot(nn)
> 
> results <- compute(nn, testset)
> 
> ls(results)
[1] "net.result" "neurons"   
> comparison <- data.frame(actual=testset[,2], prediction=results$net.result)
> comparison
      actual prediction
1  0.5314953  0.3642870
2  0.5514204  0.3697437
3  0.5718373  0.3751852
4  0.5927522  0.3806112
5  0.6141710  0.3860216
6  0.6360997  0.3914162
7  0.6585443  0.3967949
8  0.6815107  0.4021575
9  0.7050051  0.4075038
10 0.7290334  0.4128337
11 0.7536015  0.4181470
12 0.7787156  0.4234436
13 0.8043815  0.4287233
14 0.8306054  0.4339861
15 0.8573931  0.4392317
16 0.8847507  0.4444601
17 0.9126842  0.4496710
18 0.9411996  0.4548645
19 0.9703029  0.4600403
20 1.0000000  0.4651983
> 
> # Zadanie 2.
> 
> # Wczytanie pliku zawierajacego dane o smartfonach z Lab1.
> smartfony <- read.csv('smartfony.csv')
> 
> # Wybor tylko interesujacych nas kolumn
> smartfony_reduced <- smartfony[, c('pamiec_ram', 'pamiec_wbudowana', 'aparat_foto', 'cena')]
> 
> # Normalizacja danych
> smartfony_scaled <- as.data.frame(lapply(smartfony_reduced, normalize))
> 
> smartfony_train <- smartfony_scaled
> smartfony_test <- smartfony_scaled[1:3, ]
> 
> # Stworzenie modelu
> # hidden=c(3,2)
> smartfony_nn <- neuralnet(cena ~ pamiec_ram + pamiec_wbudowana + aparat_foto, data=smartfony_train,
+                           hidden=c(3,2), threshold=0.01)
> 
> print(smartfony_nn)
$call
neuralnet(formula = cena ~ pamiec_ram + pamiec_wbudowana + aparat_foto, 
    data = smartfony_train, hidden = c(3, 2), threshold = 0.01)

$response
        cena
1  1.0000000
2  0.6875000
3  0.0390625
4  0.1406250
5  0.2031250
6  0.7187500
7  0.1406250
8  0.0000000
9  0.0937500
10 0.2500000
11 0.1632812
12 0.3437500
13 0.0937500
14 0.6562500
15 0.6406250

$covariate
      pamiec_ram pamiec_wbudowana aparat_foto
 [1,]  0.4285714        1.0000000  1.00000000
 [2,]  0.4285714        1.0000000  0.21875000
 [3,]  0.1428571        0.1428571  0.21875000
 [4,]  0.2857143        0.4285714  0.21875000
 [5,]  0.4285714        0.4285714  0.29166667
 [6,]  0.4285714        1.0000000  0.21875000
 [7,]  0.2857143        0.4285714  0.21875000
 [8,]  0.0000000        0.0000000  0.00000000
 [9,]  0.2857143        0.1428571  0.52083333
[10,]  0.2857143        0.4285714  0.02083333
[11,]  0.2857143        0.4285714  0.21875000
[12,]  0.7142857        1.0000000  0.52083333
[13,]  0.1428571        0.4285714  0.21875000
[14,]  1.0000000        1.0000000  0.21875000
[15,]  0.4285714        0.4285714  0.21875000

$model.list
$model.list$response
[1] "cena"

$model.list$variables
[1] "pamiec_ram"       "pamiec_wbudowana" "aparat_foto"     


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x000001a457c6bfc8>
<environment: 0x000001a4521b9e60>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x000001a457c69490>
<environment: 0x000001a4521b99c8>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
   pamiec_ram pamiec_wbudowana aparat_foto      cena
1   0.4285714        1.0000000  1.00000000 1.0000000
2   0.4285714        1.0000000  0.21875000 0.6875000
3   0.1428571        0.1428571  0.21875000 0.0390625
4   0.2857143        0.4285714  0.21875000 0.1406250
5   0.4285714        0.4285714  0.29166667 0.2031250
6   0.4285714        1.0000000  0.21875000 0.7187500
7   0.2857143        0.4285714  0.21875000 0.1406250
8   0.0000000        0.0000000  0.00000000 0.0000000
9   0.2857143        0.1428571  0.52083333 0.0937500
10  0.2857143        0.4285714  0.02083333 0.2500000
11  0.2857143        0.4285714  0.21875000 0.1632812
12  0.7142857        1.0000000  0.52083333 0.3437500
13  0.1428571        0.4285714  0.21875000 0.0937500
14  1.0000000        1.0000000  0.21875000 0.6562500
15  0.4285714        0.4285714  0.21875000 0.6406250

$exclude
NULL

$net.result
$net.result[[1]]
              [,1]
 [1,]  0.693714886
 [2,]  0.619752539
 [3,]  0.009075921
 [4,]  0.237805789
 [5,]  0.338629734
 [6,]  0.619752539
 [7,]  0.237805789
 [8,] -0.061639192
 [9,]  0.120278422
[10,]  0.200679167
[11,]  0.237805789
[12,]  0.707572215
[13,]  0.155256847
[14,]  0.727262496
[15,]  0.322525878


$weights
$weights[[1]]
$weights[[1]][[1]]
           [,1]       [,2]      [,3]
[1,] -1.7566869  0.2758826 0.7435277
[2,]  2.0162456 -2.9881641 2.6982114
[3,]  2.4420994 -1.5871389 2.1367474
[4,]  0.8899729 -0.8070086 3.4052839

$weights[[1]][[2]]
           [,1]       [,2]
[1,]  0.5451569 -0.7871702
[2,] -2.5954379  2.5608807
[3,] -0.1682399 -1.2896930
[4,]  0.8636583 -1.0899943

$weights[[1]][[3]]
           [,1]
[1,]  0.2656565
[2,] -0.7024191
[3,]  1.0189736



$generalized.weights
$generalized.weights[[1]]
            [,1]       [,2]      [,3]
 [1,]  0.8130089  0.8991771 0.3346594
 [2,]  1.2894566  1.4345141 0.5018849
 [3,] 41.5232257 45.0593028 9.2356373
 [4,]  3.2686133  3.6081989 1.1459476
 [5,]  2.6170225  2.9294699 0.9968751
 [6,]  1.2894566  1.4345141 0.5018849
 [7,]  3.2686133  3.6081989 1.1459476
 [8,] -1.7582122 -2.1808861 1.4127493
 [9,]  5.1596480  5.6138729 1.8974127
[10,]  3.4510394  3.8412027 1.0205135
[11,]  3.2686133  3.6081989 1.1459476
[12,]  0.6923993  0.7848485 0.2857114
[13,]  4.2415443  4.6232012 1.3616253
[14,]  0.5207554  0.6022779 0.2142483
[15,]  2.6860794  3.0094819 0.9980081


$startweights
$startweights[[1]]
$startweights[[1]][[1]]
           [,1]       [,2]       [,3]
[1,] -0.5739114  0.1599087 -0.6224361
[2,]  1.2632181 -2.1552191  0.6450524
[3,]  0.6464850  0.5609000  2.1875218
[4,]  0.4824801  0.1090325 -0.9103724

$startweights[[1]][[2]]
            [,1]       [,2]
[1,]  0.06846602 -0.6437382
[2,] -2.33301155  2.0124329
[3,] -0.79810100 -0.5940597
[4,]  0.71830159 -1.3474701

$startweights[[1]][[3]]
             [,1]
[1,]  0.455703537
[2,] -0.006785878
[3,]  0.958740605



$result.matrix
                                     [,1]
error                         0.200609424
reached.threshold             0.007357449
steps                        60.000000000
Intercept.to.1layhid1        -1.756686899
pamiec_ram.to.1layhid1        2.016245573
pamiec_wbudowana.to.1layhid1  2.442099399
aparat_foto.to.1layhid1       0.889972917
Intercept.to.1layhid2         0.275882602
pamiec_ram.to.1layhid2       -2.988164106
pamiec_wbudowana.to.1layhid2 -1.587138852
aparat_foto.to.1layhid2      -0.807008639
Intercept.to.1layhid3         0.743527735
pamiec_ram.to.1layhid3        2.698211389
pamiec_wbudowana.to.1layhid3  2.136747384
aparat_foto.to.1layhid3       3.405283871
Intercept.to.2layhid1         0.545156913
1layhid1.to.2layhid1         -2.595437922
1layhid2.to.2layhid1         -0.168239862
1layhid3.to.2layhid1          0.863658267
Intercept.to.2layhid2        -0.787170233
1layhid1.to.2layhid2          2.560880688
1layhid2.to.2layhid2         -1.289692957
1layhid3.to.2layhid2         -1.089994297
Intercept.to.cena             0.265656545
2layhid1.to.cena             -0.702419105
2layhid2.to.cena              1.018973632

attr(,"class")
[1] "nn"
> plot(smartfony_nn)
> 
> smartfony_results <- compute(smartfony_nn, smartfony_test)
> 
> ls(smartfony_results)
[1] "net.result" "neurons"   
> smartfony_comparison <- data.frame(actual=smartfony_test[,c('cena')], prediction=smartfony_results$net.result)
> smartfony_comparison
     actual prediction
1 1.0000000 0.99037386
2 0.6875000 0.58220906
3 0.0390625 0.01947269